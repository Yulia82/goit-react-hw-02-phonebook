{"version":3,"sources":["components/Wrapper/Wrapper.styles.js","components/Form/Form.js","components/SectionTitle/SectionTitle.styles.js","components/SectionTitle/SectionTitle.js","components/Contacts/ContactsList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["Wrapper","styled","div","Form","state","name","number","InputChange","evt","setState","currentTarget","value","FormSubmit","preventDefault","props","onSubmit","this","type","onChange","pattern","title","required","Component","TitleSection","h2","SectionTitle","children","ContactsList","contactList","onDelete","map","contact","id","onClick","Filter","filter","onFilterChange","App","contacts","testDataContacts","FormSubmitHandler","dataSubmit","forEach","alert","newContact","uuidv4","newElement","push","prevState","FilterChange","FilterContacts","toLowerCase","includes","onDeleteContact","console","log","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8336989.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: rgba(238, 238, 238, 0.8);\r\n  border-radius: 10px;\r\n`;","import { Component } from \"react\"\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    InputChange = (evt) => {\r\n        this.setState({\r\n            [evt.currentTarget.name]: evt.currentTarget.value,\r\n        })\r\n    }\r\n\r\n    FormSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        // console.log(evt);\r\n        // console.log(this.state);\r\n\r\n        this.props.onSubmit(this.state);\r\n\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.FormSubmit}>\r\n                <label>\r\n                    name\r\n                    <input\r\n                        type=\"text\"\r\n                        value={this.state.name}\r\n                        onChange={this.InputChange}\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    Fhone number\r\n                    <input\r\n                        type=\"tel\"\r\n                        value={this.state.number}\r\n                        onChange={this.InputChange}\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import styled from \"@emotion/styled\";\r\n\r\nexport const TitleSection = styled.h2`\r\n  font-weight: bold;\r\n  text-align: center;\r\n  padding: 10px 20px;\r\n`;","import { TitleSection } from \"./SectionTitle.styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SectionTitle = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <TitleSection>{title}</TitleSection>\r\n            {children}\r\n        </section>\r\n    );\r\n};\r\n\r\nSectionTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    // children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default SectionTitle;","const ContactsList = ({ contactList, onDelete }) => {\r\n    // console.log('contactList::::', contactList);\r\n    return (\r\n        <ul>\r\n            {contactList.map(contact => (\r\n                <li key={contact.id}>{contact.name}:{contact.number}\r\n                    <button type=\"button\" name={contact.id} onClick={onDelete}>delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default ContactsList;","const Filter = ({ filter, onFilterChange}) => {\r\n    return (\r\n        <label>\r\n            Find contacts by name\r\n        <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={onFilterChange}\r\n        />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Filter;","import { Component } from \"react\"\nimport { Wrapper } from '../Wrapper/Wrapper.styles'\nimport Form from '../Form'\nimport SectionTitle from '../SectionTitle'\nimport ContactsList from '../Contacts'\nimport Filter from '../Filter'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport testDataContacts from '../data/data.json'\n\n\nclass App extends Component {\n  state = {\n    contacts: [...testDataContacts],\n    filter:'',\n  }\n\n  FormSubmitHandler = (dataSubmit) => {\n    const { contacts } = this.state;\n    const { name, number } = dataSubmit;\n\n    contacts.forEach(contact => {\n      if (name === contact.name) {\n        alert(`${name} is already in contacts`);\n      }\n    });\n\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    }\n\n    const newElement = [];\n    newElement.push(newContact);\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, ...newElement],\n    }))\n  }\n\n  FilterChange = (evt) => {\n    this.setState({\n        filter: evt.currentTarget.value,\n    })\n  }\n  \n  FilterContacts = () => {\n    const { contacts, filter } = this.state;\n    const contactsFilter = contacts.filter(contact => (contact.name.toLowerCase().includes(filter.toLowerCase())));\n    // console.log('filterArr', contactsFilter);\n    return contactsFilter;\n  }\n\n  onDeleteContact = (evt) => {\n    console.log('Id', evt.target.name);\n\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== evt.target.name)\n    }))\n  }\n\n\n\n  render() {\n    return (\n      <Wrapper>\n        <SectionTitle title=\"Phonebook\">\n          <Form onSubmit={this.FormSubmitHandler} />\n        </SectionTitle>\n\n        <SectionTitle title=\"Contacts\">\n          <Filter filter={this.state.filter} onFilterChange={this.FilterChange}/>\n          <ContactsList contactList={this.FilterContacts()} onDelete={this.onDeleteContact}/>\n        </SectionTitle>\n      </Wrapper>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}